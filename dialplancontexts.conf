;
; verzija datoteke 1.0.1
; datum: 03.06.2015
;
; 27.5.2015 1.0.1
; ispravljene greske u len()
; 03.06.2015
; kreiran iz extensions.conf
; dodane funkcije za greške i izbaèene funkcije za obradu snimku nakon hangupa

[subToFax] ;funkcija obraðuje faks pozive na faks server u asterisku te ih pretvara u email.
exten => _X.,1,Verbose(Incomming fax to ${CALLERID(dnid)})
        ;ARG1=email of fax ARG2=Name of fax, ARG3=send to email
	;set the fax filename
	same => n,Set(tempfax=${STRFTIME(,,%C%y%m%d%H%M)})
	;set calltype in CDR to 3 (Fax)
	same => n,Set(CDR(calltype)=3)
	same => n,ReceiveFax(${FAXDEST}/${tempfax}.tif)
	same => n,Verbose(3,Fax receipt completed with status: ${FAXSTATUS})

;after the call was finished forward the file to email
exten => h,1,Verbose(3, Saljem email)
	same => n,System(/usr/bin/tiff2pdf ${FAXDEST}/${tempfax}.tif -o ${FAXDEST}/${tempfax}.pdf)
	same => n,System(/usr/lib/sendfax2mail.pl ${FAXDEST}/${tempfax} ${ARG1} ${ARG2} ${ARG3} ${UNIQUEID})


[subDialOut] ;odlazni pozivi
;Vazno napomenuti da ovdje mora biti _X. Kao prva da ne bude start jer ako se koristi start
;extension onda u CDRovima pise start
exten => _X.,1,Verbose(Calling ${CALLERID(dnid)} and extension ${EXTEN})
        ;ARG1=options, ARG2=trunk, ARG3=recording (yes or no)
        ;ARG4=prefix, ARG5=sufix, ARG6=public CLID
        ;this is setting for automix filename (just in case)
        same => n,Set(TOUCH_MIXMONITOR=FROM-${CALLERID(num)}-TO-${CALLERID(dnid)}-${UNIQUEID})
        ;if recording is set to yes do it
        same => n,GoSubIf($["${ARG3}" = "yes"]?subRecordAll,${EXTEN},1)
        same => n,Verbose(dialed ${CALLERID(dnid)} and extension ${EXTEN} )
	same => n,GotoIf($[${LEN(${ARG6})}=0]?dial)
	same => n,Set(CALLERID(num)=${ARG6})
	;actual dialing happens in next line
        same => n(dial),Dial(${ARG2}/${ARG4}${EXTEN}${ARG5},,${ARG1})

;ekstenzija "h" se aktivira kad se spusti slusalica
exten => h,1,Verbose(3, There was a hang up. ${CALLERID(num)} called ${CALLERID(DNID)})

[subToExtension] ;pozivi prema internim telefonima
;Vazno napomenuti da ovdje mora biti _X. Kao prva da ne bude start jer ako se koristi start
;extension onda u CDRovima pise start
exten => _X.,1,Verbose(Calling ${CALLERID(dnid)} and extension ${EXTEN})
        ;ARG1=technolgy, ARG2=extension, ARG3=voicemail context, ARG4 = voicemailmailbox
        ;ARG5=time before VM, ARG6=options
        ;ARG7=recording (yes or no), ARG8=group name, ARG9=forwarded to
        ;this is setting for automix filename (just in case)
        same => n,Set(TOUCH_MIXMONITOR=FROM-${CALLERID(num)}-TO-${CALLERID(dnid)}-${UNIQUEID})
        ;if recording is set to yes do it
        same => n,GoSubIf($["${ARG7}" = "yes"]?subRecordAll,${EXTEN},1)
        ;actual dialing happens in next line
        same => n,Dial(${ARG1}/${ARG2},${ARG5},${ARG6})
        ;check if this is group call, and if it is return back (to avoid going to voicemail)
	same => n,GotoIf($[${LEN(${ARG8})}!=0]?return)
	;if forwarded dial
	same => n,GotoIf($[${LEN(${ARG9})}=0]?unavail)
	;if forwardedto number starts with dialout number then its outside number
	same => n,GotoIf($[(${ARG9:0:1})!=${DIALOUT}]?internal)
	same => n(external),Set(SIPEXT=${ODBC_GetPath(${ARG9:1},${ARG2})})
        same => n,GoSub(${SIPEXT})
	same => n,Goto(unavail)
        same => n(internal),Set(SIPEXT=${ODBC_GetSubExtension(${ARG9},${CALLERID(NUM)})})
        same => n,GoSub(${SIPEXT})
        ;if voicemail is configured do it
        same => n(unavail),GoSubIf($[$[${ARG3}!=no]|$[${ARG4}!=no]]]?subVoiceMail,${EXTEN},1(${ARG4}@${ARG3}))
        same => n(end),Hangup()
        same => n(return),Return()

;ekstenzija "h" se aktivira kad se spusti slusalica
exten => h,1,Verbose(3, There was a hang up. ${CALLERID(num)} called ${CALLERID(DNID)})

[subVoiceMail] ;Voicemail
exten => _X.,1,Verbose(Voicemail for ${CALLERID(dnid)})
	;set that calltype is 4 (voicemail) to be seen in CDR
	same => n,Set(CDR(calltype)=4)
	same => n,Set(voicemail=${IF($["${DIALSTATUS}" = "BUSY"]?${ARG1},bs:${ARG1},us)})
    	same => n,Set(CALLERID(name)=${UNIQUEID})
	same => n,Voicemail(${voicemail})
        same => n,Return()

[subRecordAll] ;priprema za total recording
exten => _X.,1,Verbose(Total recording for ${CALLERID(dnid)})
	same => n,NoOp()
	; check if the filename was set already. If it was then return from sub
	; this way we avoid multiple recorded files for e.g. group calls
	same => n,GotoIf($[$["${MONITOR_FILENAME}" != ""]]?end)
	; if the file name wasnt set then set and setup mixmonitor
	same => n,Set(MONITOR_FILENAME=${EPOCH}-FROM-${CALLERID(num)}-TO-${CALLERID(dnid)}-${UNIQUEID})
	same => n,MixMonitor(${MONITOR_FILENAME}.wav,b)	
	same => n(end),Return()


[subToGroup] ;pozivi prema grupi
exten => _X.,1,Verbose(Call from ${CALLERID(all)})
        ;ARG1=technolgy, ARG2=extensions, ARG3=voicemail context, ARG4 = voicemailmailbox
        ;ARG5=time before VM, ARG6=options
        ;ARG7=recording (yes or no),ARG8=type of group ringing s - one by one, g - all together
        ;same => n,Set(TOUCH_MIXMONITOR=FROM-${CALLERID(num)}-TO-${CALLERID(dnid)}-${UNIQUEID})
        ;set counters
        same => n,Set(i=1)
        same => n,Set(j=1)
        ;set CDR call type to group
        same => n,Set(CDR(calltype)=2)
        ;get list of extensions
        same => n,Set(extensions=${ARG2})
        same => n,Set(Length=${LEN(${extensions})})
        ;turn list of extensions to array
        same => n,While($[${LEN(${extensions})} > 0])
                same => n,Set(extension${i}=$["${extensions}":"(^[^*]*)"])
                same => n,Set(extensions=${extensions:$[LEN(${extension${i}})+1]})
                same => n,Set(i=$[${i} + 1])
        same => n,EndWhile
        ;group type?
        same => n,GotoIf($["${ARG8}" = "s"]?sequence)
        ;if call type is group then make dialable string from array
        same => n(together),While($[${j}<${i}])
                same => n,Set(ToDial=${IF($[$[LEN(${ToDial}) != 0]]?${ToDial}&SIP/)})
                same => n,Set(ToDial=${ToDial}${extension${j}})
                same => n,Set(Status=1)
                ;send message to members of the group one by one
                same => n,Set(j=$[${j} + 1])
        same => n,EndWhile
        ;use subToExtension to dial all in the sime time
        same => n,GoSub(subToExtension,${EXTEN},1(${ARG1},${ToDial},${ARG3},${ARG4},${ARG5},${ARG6},${ARG7}))
        same => n,Goto(end)
        ;if group type sequence then call one by one
        same => n(sequence),While($[${j}<${i}])
                same => n,GoSub(subToExtension,${EXTEN},1(${ARG1},${extension${j}},no,no,${ARG5},${ARG6},${ARG7},${CALLERID(dnid)}))
                same => n,Set(j=$[${j} + 1])
        same => n,EndWhile
        ;if voicemail is configured do it (this is group voicemail)
        same => n,GoSubIf($[$[${ARG3}!=no]|$[${ARG4}!=no]]]?subVoiceMail,${EXTEN},1(${ARG4}@${ARG3}))
        same => n(end),Hangup()

;ekstenzija "h" se aktivira kad se spusti usalica
exten => h,1,Verbose(3, There was a hang up. ${CALLERID(num)} called ${CALLERID(DNID)})

[subToConference] ;pozivi prema konferencijskom bridgeu
exten => _X.,1,Verbose(Joining conference ${EXTEN} by  ${CALLERID(all)})
        ;ARG1=user type ARG2= bridge type 
	;set CDR call type to conference
        same => n,Set(CDR(calltype)=5)
	same => n,ConfBridge(${EXTEN},${ARG2},${ARG1})

;ekstenzija "h" se aktivira kad se spusti usalica
exten => h,1,Verbose(3, There was a hang up. ${CALLERID(num)} called ${CALLERID(DNID)})

[Functions]
;Forward all calls
exten => _*21*X.,1,Verbose(Forward all for ${CALLERID(num)} to ${EXTEN:4})
	same => n,Set(ODBC_SetForwardAll(${CALLERID(num)})=${EXTEN:4})
	same => n,Hangup()

;Remove forward
exten => _#21,1,Verbose(Remove forward for ${CALLERID(num)})
        same => n,Set(ODBC_SetRemoveForward(${CALLERID(num)})=)
        same => n,Hangup()

;Forward nakon x sekundi		
exten => _*22*X.,1,Verbose(Forward all for ${CALLERID(num)} to ${EXTEN:4})
	same => n,Answer()
	same => n,Playtones(450)
	same => n,Read(beforeEnd,,2,,1,10);
	same => n,GotoIf($[${LEN(${beforeEnd})}=0]?end)
	same => n,Set(ODBC_SetForwardBDA(${CALLERID(num)})=${EXTEN:4},${beforeEnd})
        same => n(end),Hangup()
	

[subError];Greške u dialplanu i bazi prima i daje ton. Ako ima ARG1 onda i zapisuje u bazu.
exten => _X.,1,Verbose(There is an error. ${CALLERID(num)} called ${CALLERID(dnid)})
	;ARG1=comment of error
	same => n,GotoIf($[${LEN(${ARG1})}=0]?answer)
	same => n,Set(ODBC_SetDialplanError(${CALLERID(num)})=${CALLERID(dnid)},${ARG1})
	same => n(answer),Answer()	
	same => n,Playtones(425/330,0/330)
	same => n,Wait(5)
	same => n(end),Hangup()


[WrongDial] ;hvata sve što nije definirano u dialplanu i usmjerava na subError
exten => _.,1,Verbose(There is an error. ${CALLERID(num)} called ${CALLERID(dnid)} in context ${CONTEXT})
	same => n,GoSub(subError,${CALLERID(dnid)},1(Could not find dialed extension (Context:${CONTEXT})))

